name: Frontend - All Environments

on:
  push:
    branches: [dev, staging, main]
    paths: ['client/**']

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}  # Dynamic environment name
    steps:
      - uses: actions/checkout@v4

      # Build with environment tag (dev/staging/prod)
      - name: Build Docker Image
        run: |
          cd client
          docker build \
            -t frontend:${{ github.ref_name }} \
            -t frontend:${{ github.ref_name }}-$(date +%s) .

      # Push to GHCR (Prod only)
      - name: Push to Registry (Prod)
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker tag frontend:main ghcr.io/${{ github.repository_owner }}/frontend:latest
          docker push ghcr.io/${{ github.repository_owner }}/frontend:latest

      # Dynamic Deployment
      - name: Deploy to ${{ github.ref_name }}
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ 
            github.ref == 'refs/heads/dev' && secrets.DEV_EC2_HOST ||
            github.ref == 'refs/heads/staging' && secrets.STAGING_EC2_HOST ||
            secrets.PROD_EC2_HOST
          }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop old container
            docker stop frontend || true
            
            # Deploy new version
            docker run -d \
              -p 3000:3000 \
              --name frontend \
              --restart unless-stopped \
              frontend:${{ github.ref_name }}

            # Health check (staging/prod only)
            if [ "${{ github.ref_name }}" != "dev" ]; then
              curl --retry 3 --fail http://localhost:3000 || exit 1
            fi

      # Manual approval for prod
      - name: Approve Production
        if: github.ref == 'refs/heads/main'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.PROD_APPROVAL_TOKEN }}
          approvers: "team-lead-1,team-lead-2"

      # Slack notification
      - uses: slackapi/slack-github-action@v1
        if: always()
        with:
          slack-message: |
            :rocket: Frontend deployed to *${{ github.ref_name }}* 
            (${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
